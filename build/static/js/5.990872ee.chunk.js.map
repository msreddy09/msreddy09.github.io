{"version":3,"sources":["constants.js","components/User.js","../node_modules/react-bootstrap/esm/Media.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Posts.js"],"names":["POST_APP","EMAIL","POSTS","COMMENTS","FULLNAME","COMPANY","WEBSITE","SEARCH_USER","BACK_TO_POSTS","USERNAME","ALLUSERS","API_URLS","USERS","USER","POST","String","prototype","format","a","this","k","arguments","replace","User","props","userId","params","id","location","useLocation","useState","options","setOptions","isLoading","setIsLoading","name","username","company","email","website","user","setUser","usersData","data","useEffect","fetch","then","res","json","catch","err","console","log","className","pathname","includes","href","filterBy","labelKey","minLength","onSearch","query","length","userList","filter","item","toLowerCase","users","setTimeout","onChange","selected","handleChange","placeholder","renderMenuItemChildren","option","catchPhrase","bs","MediaBody","createWithBsPrefix","Media","React","forwardRef","_ref","ref","bsPrefix","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","Body","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","source","forEach","key","defineProperty","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","Posts","postsData","finalPostsData","postsList","setPostsList","setUsersData","history","useHistory","allPosts","allUsers","post","error","Container","Row","Col","sm","style","map","onClick","n","width","height","src","alt","event","stopPropagation","onUserClickHandler","title"],"mappings":"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","file":"static/js/5.990872ee.chunk.js","sourcesContent":["export const POST_APP = {\r\n    EMAIL: 'Email',\r\n    POSTS: 'Posts',\r\n    COMMENTS: 'Comments',\r\n    FULLNAME: 'Full Name',\r\n    COMPANY: 'Company Details',\r\n    WEBSITE: 'Website',\r\n    SEARCH_USER: 'Search for a User...',\r\n    BACK_TO_POSTS: 'Back to Posts',\r\n    USERNAME: 'Username',\r\n    ALLUSERS: 'All Users',\r\n    POSTS: 'Posts'\r\n};\r\n\r\nexport const API_URLS = {\r\n    POSTS: 'https://jsonplaceholder.typicode.com/posts',\r\n    USERS: 'https://jsonplaceholder.typicode.com/users',\r\n    USER: 'https://jsonplaceholder.typicode.com/users/{0}',\r\n    POST: 'https://jsonplaceholder.typicode.com/posts/{0}',\r\n    COMMENTS: 'https://jsonplaceholder.typicode.com/comments?postId={0}'\r\n}\r\n\r\nString.prototype.format = function () {\r\n    let a = this;\r\n    for (let k in arguments) {\r\n        a = a.replace(\"{\" + k + \"}\", arguments[k])\r\n    }\r\n    return a\r\n}\r\n\r\n","import React, { useEffect, useState, Fragment } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { API_URLS, POST_APP } from '../constants'\r\n\r\n\r\n\r\nconst User = (props) => {\r\n    const userId = props.params ? props.params.id : '';\r\n    const location = useLocation();\r\n\r\n    const [options, setOptions] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        username: '',\r\n        company: '',\r\n        email: '',\r\n        website: ''\r\n    })\r\n    let usersData = props.data || []\r\n    const filterBy = () => true;\r\n\r\n    const handleSearch = (query) => {\r\n        setIsLoading(true);\r\n        if (usersData.length) {\r\n            const userList = usersData.filter((item) => {\r\n                return item.name.toLowerCase().includes(query ? query.toLowerCase() : '')\r\n            })\r\n            setOptions(userList);\r\n            setIsLoading(false);\r\n        } else {\r\n            fetch(API_URLS.USERS)\r\n                .then(res => res.json())\r\n                .then(users => {\r\n                    const userList = users.filter((item) => {\r\n                        return item.name.toLowerCase().includes(query ? query.toLowerCase() : '')\r\n                    })\r\n                    setTimeout(() => setOptions(userList), 0);\r\n                    setIsLoading(false);\r\n                })\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (userId) {\r\n            fetch(API_URLS.USER.format(userId))\r\n                .then(res => res.json())\r\n                .then(user => {\r\n                    setUser(user)\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n\r\n    }, [])\r\n\r\n    const handleChange = (selected) => {\r\n        if (selected.length) {\r\n            const userId = selected[0].id;\r\n            fetch(API_URLS.USER.format(userId))\r\n                .then(res => res.json())\r\n                .then(user => {\r\n                    console.log(user)\r\n                    setUser(user)\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n\r\n            <Container className='search-textinput'>\r\n                <p>{location.pathname.includes('/user') ? <a href=\"/\">{POST_APP.BACK_TO_POSTS}</a> : null}</p>\r\n                <AsyncTypeahead\r\n                    filterBy={filterBy}\r\n                    isLoading={isLoading}\r\n                    id=\"async-example\"\r\n                    labelKey=\"name\"\r\n                    minLength={1}\r\n                    onSearch={handleSearch}\r\n                    options={options}\r\n                    onChange={(selected) => handleChange(selected)}\r\n                    placeholder={POST_APP.SEARCH_USER}\r\n                    renderMenuItemChildren={(option, props) => (\r\n                        <Fragment>\r\n                            <span>{option.name}</span>\r\n                        </Fragment>\r\n                    )}\r\n                />\r\n            </Container>\r\n            {user.username ? <Container className='user-details'>\r\n                <Row>\r\n                    <Col>{POST_APP.USERNAME}</Col><Col> {user.username}</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>{POST_APP.FULLNAME}</Col><Col> {user.name}</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>{POST_APP.EMAIL}</Col><Col>{user.email}</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>{POST_APP.WEBSITE}</Col><Col><a href={user.website}>{user.website} </a></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>{POST_APP.COMPANY}</Col>\r\n                    <Col>\r\n                        <div>{user.company.name}</div>\r\n                        <div>{user.company.catchPhrase}</div>\r\n                        <div>{user.company.bs}</div>\r\n                    </Col>\r\n                </Row>\r\n                <p>{location.pathname.includes('/user') ? <a href=\"/\">{POST_APP.BACK_TO_POSTS}</a> : null}</p>\r\n\r\n            </Container > : null}\r\n\r\n\r\n\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default User;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar MediaBody = createWithBsPrefix('media-body');\nvar Media = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'media');\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, prefix)\n  }));\n});\nMedia.displayName = 'Media';\nMedia.Body = MediaBody;\nexport default Media;","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useCallback, useEffect, useMemo, useState, lazy, Fragment } from 'react';\r\nimport { Media, Container, Row, Col } from 'react-bootstrap'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport User from './User'\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport { API_URLS, POST_APP } from '../constants'\r\n\r\n\r\nconst Posts = () => {\r\n    let postsData = null;\r\n    let finalPostsData = [];\r\n    const [postsList, setPostsList] = useState([]);\r\n    const [usersData, setUsersData] = useState([]);\r\n    const history = useHistory();\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(API_URLS.POSTS)\r\n            .then(res => res.json())\r\n            .then((allPosts) => {\r\n                postsData = [...allPosts];\r\n                fetch(API_URLS.USERS)\r\n                    .then((res) => res.json())\r\n                    .then((allUsers) => {\r\n                        setUsersData(allUsers);\r\n                        postsData.forEach(post => {\r\n                            allUsers.forEach(user => {\r\n                                if (post.userId === user.id) {\r\n                                    finalPostsData.push({ ...post, 'username': user.username })\r\n                                }\r\n                            })\r\n                        });\r\n                        setPostsList(finalPostsData)\r\n                    })\r\n\r\n            }, (error) => {\r\n                console.log(error)\r\n            })\r\n    }, [])\r\n    const onPostClickHandler = (n) => {\r\n        history.push('/pview/' + n);\r\n    }\r\n    const onUserClickHandler = (event, n) => {\r\n        event.stopPropagation();\r\n        history.push('/user/' + n)\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col sm={8}>\r\n                    <p style={{ \"borderBottom\": \"1px solid #eee\", \"padding\": \"10px 0\" }}>{POST_APP.POSTS} ({postsList.length}) </p>\r\n                    {postsList.map(item =>\r\n                        <Media key={item.id} onClick={() => onPostClickHandler(item.id)}>\r\n                            <img\r\n                                width={64}\r\n                                height={64}\r\n                                className=\"mr-3\"\r\n                                src=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2264%22%20height%3D%2264%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2064%2064%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_1767c102fec%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3A-apple-system%2CBlinkMacSystemFont%2C%26quot%3BSegoe%20UI%26quot%3B%2CRoboto%2C%26quot%3BHelvetica%20Neue%26quot%3B%2CArial%2C%26quot%3BNoto%20Sans%26quot%3B%2Csans-serif%2C%26quot%3BApple%20Color%20Emoji%26quot%3B%2C%26quot%3BSegoe%20UI%20Emoji%26quot%3B%2C%26quot%3BSegoe%20UI%20Symbol%26quot%3B%2C%26quot%3BNoto%20Color%20Emoji%26quot%3B%2C%20monospace%3Bfont-size%3A10pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_1767c102fec%22%3E%3Crect%20width%3D%2264%22%20height%3D%2264%22%20fill%3D%22%23373940%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2214.4921875%22%20y%3D%2237.4046875%22%3E64x64%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\"\r\n                                alt=\"Generic placeholder\"\r\n                            />\r\n                            <Media.Body>\r\n                                <span className=\"post-username\" onClick={(event) => onUserClickHandler(event, item.userId)}>{item.username}</span>\r\n                                <p> {item.title}</p>\r\n                            </Media.Body>\r\n                        </Media>\r\n                    )}</Col>\r\n                <Col sm={4}>\r\n                    <User data={usersData} />\r\n                    <Container>\r\n                        <p>{POST_APP.ALLUSERS} ({usersData.length})</p>\r\n\r\n                        {usersData.map(item => <li key={item.id}><a href={'/user/' + item.id}>{item.name}</a></li>)}\r\n\r\n                    </Container>\r\n\r\n                </Col>\r\n            </Row>\r\n        </Container >\r\n    )\r\n}\r\nexport default Posts\r\n"],"sourceRoot":""}