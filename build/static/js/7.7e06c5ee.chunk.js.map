{"version":3,"sources":["constants.js","components/User.js"],"names":["POST_APP","EMAIL","POSTS","COMMENTS","FULLNAME","COMPANY","WEBSITE","SEARCH_USER","BACK_TO_POSTS","USERNAME","ALLUSERS","API_URLS","USERS","USER","POST","String","prototype","format","a","this","k","arguments","replace","User","props","userId","params","id","location","useLocation","useState","options","setOptions","isLoading","setIsLoading","name","username","company","email","website","user","setUser","usersData","data","useEffect","fetch","then","res","json","catch","err","console","log","className","pathname","includes","href","filterBy","labelKey","minLength","onSearch","query","length","userList","filter","item","toLowerCase","users","setTimeout","onChange","selected","handleChange","placeholder","renderMenuItemChildren","option","catchPhrase","bs"],"mappings":"+LAAaA,EAAQ,aACjBC,MAAO,QACPC,MAAO,QACPC,SAAU,WACVC,SAAU,YACVC,QAAS,kBACTC,QAAS,UACTC,YAAa,uBACbC,cAAe,gBACfC,SAAU,WACVC,SAAU,aAVO,QAWV,SAGEC,EAAW,CACpBT,MAAO,6CACPU,MAAO,6CACPC,KAAM,iDACNC,KAAM,iDACNX,SAAU,4DAGdY,OAAOC,UAAUC,OAAS,WACtB,IAAIC,EAAIC,KACR,IAAK,IAAIC,KAAKC,UACVH,EAAIA,EAAEI,QAAQ,IAAMF,EAAI,IAAKC,UAAUD,IAE3C,OAAOF,I,kHCmGIK,UAtHF,SAACC,GACV,IAAMC,EAASD,EAAME,OAASF,EAAME,OAAOC,GAAK,GAC1CC,EAAWC,cAFG,EAIUC,mBAAS,IAJnB,mBAIbC,EAJa,KAIJC,EAJI,OAKcF,oBAAS,GALvB,mBAKbG,EALa,KAKFC,EALE,OAMIJ,mBAAS,CAC7BK,KAAM,GACNC,SAAU,GACVC,QAAS,GACTC,MAAO,GACPC,QAAS,KAXO,mBAMbC,EANa,KAMPC,EANO,KAahBC,EAAYlB,EAAMmB,MAAQ,GA2B9BC,qBAAU,WACFnB,GACAoB,MAAMlC,IAASE,KAAKI,OAAOQ,IACtBqB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAN,GACFC,EAAQD,MAEXS,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAGnC,IAcH,OACI,kBAAC,WAAD,KAEI,kBAAC,IAAD,CAAWG,UAAU,oBACjB,2BAAIzB,EAAS0B,SAASC,SAAS,SAAW,uBAAGC,KAAK,KAAKxD,IAASQ,eAAqB,MACrF,kBAAC,IAAD,CACIiD,SAxDC,kBAAM,GAyDPxB,UAAWA,EACXN,GAAG,gBACH+B,SAAS,OACTC,UAAW,EACXC,SA3DK,SAACC,GAElB,GADA3B,GAAa,GACTQ,EAAUoB,OAAQ,CAClB,IAAMC,EAAWrB,EAAUsB,QAAO,SAACC,GAC/B,OAAOA,EAAK9B,KAAK+B,cAAcX,SAASM,EAAQA,EAAMK,cAAgB,OAE1ElC,EAAW+B,GACX7B,GAAa,QAEbW,MAAMlC,IAASC,OACVkC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAqB,GACF,IAAMJ,EAAWI,EAAMH,QAAO,SAACC,GAC3B,OAAOA,EAAK9B,KAAK+B,cAAcX,SAASM,EAAQA,EAAMK,cAAgB,OAE1EE,YAAW,kBAAMpC,EAAW+B,KAAW,GACvC7B,GAAa,OA4CbH,QAASA,EACTsC,SAAU,SAACC,GAAD,OAzBL,SAACA,GAClB,GAAIA,EAASR,OAAQ,CACjB,IAAMrC,EAAS6C,EAAS,GAAG3C,GAC3BkB,MAAMlC,IAASE,KAAKI,OAAOQ,IACtBqB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAN,GACFW,QAAQC,IAAIZ,GACZC,EAAQD,MAEXS,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAgBEqB,CAAaD,IACrCE,YAAaxE,IAASO,YACtBkE,uBAAwB,SAACC,EAAQlD,GAAT,OACpB,kBAAC,WAAD,KACI,8BAAOkD,EAAOvC,WAK7BK,EAAKJ,SAAW,kBAAC,IAAD,CAAWiB,UAAU,gBAClC,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAMrD,IAASS,UAAe,kBAAC,IAAD,SAAO+B,EAAKJ,WAE9C,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAMpC,IAASI,UAAe,kBAAC,IAAD,SAAOoC,EAAKL,OAE9C,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAMnC,IAASC,OAAY,kBAAC,IAAD,KAAMuC,EAAKF,QAE1C,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAMtC,IAASM,SAAc,kBAAC,IAAD,KAAK,uBAAGkD,KAAMhB,EAAKD,SAAUC,EAAKD,QAA7B,OAEtC,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAMvC,IAASK,SACf,kBAAC,IAAD,KACI,6BAAMmC,EAAKH,QAAQF,MACnB,6BAAMK,EAAKH,QAAQsC,aACnB,6BAAMnC,EAAKH,QAAQuC,MAG3B,2BAAIhD,EAAS0B,SAASC,SAAS,SAAW,uBAAGC,KAAK,KAAKxD,IAASQ,eAAqB,OAEzE","file":"static/js/7.7e06c5ee.chunk.js","sourcesContent":["export const POST_APP = {\r\n    EMAIL: 'Email',\r\n    POSTS: 'Posts',\r\n    COMMENTS: 'Comments',\r\n    FULLNAME: 'Full Name',\r\n    COMPANY: 'Company Details',\r\n    WEBSITE: 'Website',\r\n    SEARCH_USER: 'Search for a User...',\r\n    BACK_TO_POSTS: 'Back to Posts',\r\n    USERNAME: 'Username',\r\n    ALLUSERS: 'All Users',\r\n    POSTS: 'Posts'\r\n};\r\n\r\nexport const API_URLS = {\r\n    POSTS: 'https://jsonplaceholder.typicode.com/posts',\r\n    USERS: 'https://jsonplaceholder.typicode.com/users',\r\n    USER: 'https://jsonplaceholder.typicode.com/users/{0}',\r\n    POST: 'https://jsonplaceholder.typicode.com/posts/{0}',\r\n    COMMENTS: 'https://jsonplaceholder.typicode.com/comments?postId={0}'\r\n}\r\n\r\nString.prototype.format = function () {\r\n    let a = this;\r\n    for (let k in arguments) {\r\n        a = a.replace(\"{\" + k + \"}\", arguments[k])\r\n    }\r\n    return a\r\n}\r\n\r\n","import React, { useEffect, useState, Fragment } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { API_URLS, POST_APP } from '../constants'\r\n\r\n\r\n\r\nconst User = (props) => {\r\n    const userId = props.params ? props.params.id : '';\r\n    const location = useLocation();\r\n\r\n    const [options, setOptions] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        username: '',\r\n        company: '',\r\n        email: '',\r\n        website: ''\r\n    })\r\n    let usersData = props.data || []\r\n    const filterBy = () => true;\r\n\r\n    const handleSearch = (query) => {\r\n        setIsLoading(true);\r\n        if (usersData.length) {\r\n            const userList = usersData.filter((item) => {\r\n                return item.name.toLowerCase().includes(query ? query.toLowerCase() : '')\r\n            })\r\n            setOptions(userList);\r\n            setIsLoading(false);\r\n        } else {\r\n            fetch(API_URLS.USERS)\r\n                .then(res => res.json())\r\n                .then(users => {\r\n                    const userList = users.filter((item) => {\r\n                        return item.name.toLowerCase().includes(query ? query.toLowerCase() : '')\r\n                    })\r\n                    setTimeout(() => setOptions(userList), 0);\r\n                    setIsLoading(false);\r\n                })\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (userId) {\r\n            fetch(API_URLS.USER.format(userId))\r\n                .then(res => res.json())\r\n                .then(user => {\r\n                    setUser(user)\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n\r\n    }, [])\r\n\r\n    const handleChange = (selected) => {\r\n        if (selected.length) {\r\n            const userId = selected[0].id;\r\n            fetch(API_URLS.USER.format(userId))\r\n                .then(res => res.json())\r\n                .then(user => {\r\n                    console.log(user)\r\n                    setUser(user)\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n\r\n            <Container className='search-textinput'>\r\n                <p>{location.pathname.includes('/user') ? <a href=\"/\">{POST_APP.BACK_TO_POSTS}</a> : null}</p>\r\n                <AsyncTypeahead\r\n                    filterBy={filterBy}\r\n                    isLoading={isLoading}\r\n                    id=\"async-example\"\r\n                    labelKey=\"name\"\r\n                    minLength={1}\r\n                    onSearch={handleSearch}\r\n                    options={options}\r\n                    onChange={(selected) => handleChange(selected)}\r\n                    placeholder={POST_APP.SEARCH_USER}\r\n                    renderMenuItemChildren={(option, props) => (\r\n                        <Fragment>\r\n                            <span>{option.name}</span>\r\n                        </Fragment>\r\n                    )}\r\n                />\r\n            </Container>\r\n            {user.username ? <Container className='user-details'>\r\n                <Row>\r\n                    <Col>{POST_APP.USERNAME}</Col><Col> {user.username}</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>{POST_APP.FULLNAME}</Col><Col> {user.name}</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>{POST_APP.EMAIL}</Col><Col>{user.email}</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>{POST_APP.WEBSITE}</Col><Col><a href={user.website}>{user.website} </a></Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>{POST_APP.COMPANY}</Col>\r\n                    <Col>\r\n                        <div>{user.company.name}</div>\r\n                        <div>{user.company.catchPhrase}</div>\r\n                        <div>{user.company.bs}</div>\r\n                    </Col>\r\n                </Row>\r\n                <p>{location.pathname.includes('/user') ? <a href=\"/\">{POST_APP.BACK_TO_POSTS}</a> : null}</p>\r\n\r\n            </Container > : null}\r\n\r\n\r\n\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default User;"],"sourceRoot":""}